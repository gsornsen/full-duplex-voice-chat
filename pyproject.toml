[project]
name = "realtime-duplex-voice"
version = "0.1.0"
description = "Realtime duplex voice chat system with barge-in support"
readme = "README.md"
requires-python = ">=3.12,<3.13"
dependencies = [
    "aiortc>=1.9.0",
    "websockets>=12.0",
    "livekit>=0.6.0",
    "pydantic>=2.0.0",
    "grpcio>=1.60.0",
    "grpcio-tools>=1.60.0",
    "protobuf>=4.25.0",
    "redis>=5.0.0",
    "numpy>=1.26.0",
    "scipy>=1.11.0",
    "sounddevice>=0.4.6",
    "soundfile>=0.12.0",
    "webrtcvad>=2.0.0",
    "torch>=2.7.0",
    "torchaudio>=2.7.0",
    "transformers>=4.40.0",
    "accelerate>=0.30.0",
    "peft>=0.10.0",
    "huggingface-hub>=0.20.0",
    "openai-whisper>=20240930",
    "watchfiles>=0.21.0",
    "pyyaml>=6.0.0",
    "livekit-api>=0.6.0",
    "aiohttp>=3.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-timeout>=2.2.0",
    "pytest-forked>=1.6.0",
    "mypy>=1.9.0",
    "ruff>=0.3.0",
    "types-pyyaml>=6.0.0",
    "types-redis>=4.6.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.ruff]
line-length = 100
target-version = "py312"
exclude = ["src/rpc/generated"]

[tool.ruff.lint]
select = ["E", "F", "I", "UP", "B", "S"]
ignore = ["S101"]  # Allow assert in tests

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["S101", "S105", "S106", "S603", "S607"]

[tool.mypy]
python_version = "3.12"
strict = true
ignore_missing_imports = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
warn_redundant_casts = true
warn_unused_ignores = true
exclude = ["src/rpc/generated"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "-v",
    "--strict-markers",
    "--tb=short",
    "-m", "not performance",
]
testpaths = ["tests"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
markers = [
    "unit: Unit tests (fast, no external dependencies)",
    "integration: Integration tests (require Docker, Redis, etc.)",
    "docker: Tests requiring Docker (may skip if unavailable)",
    "redis: Tests requiring Redis container",
    "livekit: Tests requiring LiveKit container",
    "performance: Performance benchmark tests",
    "slow: Tests that take longer to run (> 5s)",
]

[tool.anyio]
backends = ["asyncio"]

[dependency-groups]
dev = [
    "pytest-asyncio>=1.2.0",
    "pytest-forked>=1.6.0",
]
