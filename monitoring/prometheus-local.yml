# Prometheus Configuration for Local Development
#
# Use this config when running services locally (not in Docker):
# - Orchestrator: just run-orch (localhost:8081)
# - TTS Worker: just run-tts-piper (localhost:9090)
#
# To use:
#   docker compose -f docker-compose.monitoring.yml down
#   # Edit docker-compose.monitoring.yml to mount this file instead
#   docker compose -f docker-compose.monitoring.yml up -d

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'tts-development'
    environment: 'local'

# Scrape configurations for LOCAL services
scrape_configs:
  # Orchestrator running locally (just run-orch)
  - job_name: 'orchestrator'
    metrics_path: '/metrics'
    scrape_interval: 15s
    scrape_timeout: 10s
    static_configs:
      # Use host.docker.internal to reach host machine from Docker
      - targets: ['host.docker.internal:8081']
        labels:
          service: 'orchestrator'
          component: 'webrtc'

  # TTS Worker running locally (just run-tts-piper)
  - job_name: 'tts-worker-local'
    metrics_path: '/metrics'
    scrape_interval: 15s
    scrape_timeout: 10s
    static_configs:
      # Piper worker on default port 9090
      - targets: ['host.docker.internal:9090']
        labels:
          service: 'tts-worker'
          worker: 'tts-worker-local'
          adapter: 'piper'
          device: 'cpu'

  # CosyVoice in Docker (if running)
  - job_name: 'tts-worker-cosyvoice'
    metrics_path: '/metrics'
    scrape_interval: 15s
    scrape_timeout: 10s
    static_configs:
      - targets: ['tts-cosyvoice:9091']
        labels:
          service: 'tts-worker'
          worker: 'tts-cosyvoice'
          adapter: 'cosyvoice2'
          device: 'gpu'

  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
