name: 'Setup Test Environment'
description: 'Reusable action for setting up Python, uv, dependencies, and protobuf generation'
author: 'CI Integration Engineer'

inputs:
  python-version:
    description: 'Python version to install'
    required: false
    default: '3.13'
  uv-version:
    description: 'uv version to install'
    required: false
    default: 'latest'
  skip-os-deps:
    description: 'Skip OS dependency installation (for GPU runners with pre-installed deps)'
    required: false
    default: 'false'
  enable-cache:
    description: 'Enable uv dependency caching'
    required: false
    default: 'true'

runs:
  using: 'composite'
  steps:
    # Install OS dependencies (libportaudio2 required for sounddevice, redis-tools for metrics tests)
    - name: Install OS dependencies
      if: inputs.skip-os-deps != 'true'
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y libportaudio2 redis-tools

    # Install uv package manager with caching
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: ${{ inputs.uv-version }}
        enable-cache: ${{ inputs.enable-cache }}
        cache-dependency-glob: "uv.lock"

    # Set up Python using uv
    - name: Set up Python
      shell: bash
      run: uv python install ${{ inputs.python-version }}

    # Install project dependencies with all extras
    - name: Install dependencies
      shell: bash
      run: uv sync --all-extras

    # Cache protobuf stubs to avoid regeneration
    - name: Cache protobuf stubs
      uses: actions/cache@v4
      with:
        path: src/rpc/generated
        key: protobuf-${{ hashFiles('src/rpc/tts.proto') }}

    # Generate protobuf Python stubs and type stubs
    - name: Generate protobuf stubs
      shell: bash
      run: |
        uv run python -m grpc_tools.protoc \
          -I src/rpc \
          --python_out=src/rpc/generated \
          --grpc_python_out=src/rpc/generated \
          --pyi_out=src/rpc/generated \
          src/rpc/tts.proto

    # Fix import paths in generated gRPC code
    - name: Fix protobuf imports
      shell: bash
      run: |
        sed -i 's/^import tts_pb2 as tts__pb2/from . import tts_pb2 as tts__pb2/' src/rpc/generated/tts_pb2_grpc.py

branding:
  icon: 'package'
  color: 'blue'
