name: CI

on:
  push:
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint (ruff)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.13

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Run ruff
        run: uv run ruff check src/ tests/

  typecheck:
    name: Type Check (mypy)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.13

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Generate protobuf stubs
        run: |
          uv run python -m grpc_tools.protoc \
            -I src/rpc \
            --python_out=src/rpc/generated \
            --grpc_python_out=src/rpc/generated \
            --pyi_out=src/rpc/generated \
            src/rpc/tts.proto

      - name: Run mypy
        run: uv run mypy src/ tests/

  test:
    name: Test (pytest)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.13

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Generate protobuf stubs
        run: |
          uv run python -m grpc_tools.protoc \
            -I src/rpc \
            --python_out=src/rpc/generated \
            --grpc_python_out=src/rpc/generated \
            --pyi_out=src/rpc/generated \
            src/rpc/tts.proto

      - name: Run pytest
        run: uv run pytest tests/ -v

  build:
    name: Build Check
    runs-on: ubuntu-latest
    needs: [lint, typecheck, test]
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.13

      - name: Verify uv lock
        run: |
          uv lock --check
          uv sync --frozen

      - name: Build success
        run: echo "All CI checks passed!"
